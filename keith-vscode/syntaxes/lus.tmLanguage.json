{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Lustre",
  "scopeName": "text.lus",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#annotations"
    },
    {
      "include": "#constants-and-special-vars"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.lus",
          "match": "\\b(_|and|assert|automaton|bool|class|combine|commuting|conflicting|const|current|div|do|else|emit|enum|expression|extern|fby|float|function|global|host|if|include|initial|input|int|is|json|label|last|let|max|min|mod|node|none|nor|not|null|or|output|pre|print|private|protected|public|random|randomize|real|ref|restart|resume|returns|schedule|scope|sfby|signal|state|static|string|struct|tel|then|this|to|type|unless|unsafe|until|val|var|void|when|xor)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.lus",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.lus",
          "match": "."
        }
      ]
    },
    "annotations": {
      "patterns": [
        {
          "name": "storage.type.annotation.lus",
          "match": "@\\w*"
        }
      ]
    },
    "constants-and-special-vars": {
      "patterns": [
        {
          "name": "constant.language.lus",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "constant.numeric.integer.lus",
          "match": "\\b(0|[1-9]([0-9_]*[0-9])?)[lL]?(?!\\w|\\.)"
        },
        {
          "name": "constant.numeric.float.lus",
          "match": "(?x)\n\t\t\t\t\t\t(?\u003c!\\w)\t\t\t\t\t\t\t\t\t\t\t# Ensure word boundry\n\t\t\t\t\t\t(?\u003e\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t(0|[1-9]([0-9_]*[0-9])?)\t\t\t\t# Leading digits\n\t\t\t\t\t\t\t\t(?\u003d[eEfFdD.])\t\t\t\t\t\t\t# Allow for numbers without .\n\t\t\t\t\t\t\t)?\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t(?\u003c\u003d[0-9])(?\u003d[eEfFdD])\t\t\t\t\t# Allow for numbers without .\n\t\t\t\t\t\t\t  | \\.\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t[0-9]([0-9_]*[0-9])?\t\t\t\t\t# Numbers after .\n\t\t\t\t\t\t\t)?\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t[eE][+-]?(0|[1-9]([0-9_]*[0-9])?)\t\t# Exponent\n\t\t\t\t\t\t\t)?\n\t\t\t\t\t\t\t[fFdD]?\t\t\t\t\t\t\t\t\t\t# Float Type Suffix\n\t\t\t\t\t\t)\n\t\t\t\t\t\t(?!\\w)\t\t\t\t\t\t\t\t\t\t\t# Ensure word boundry\n\t\t\t\t\t"
        }
      ]
    }
  }
}